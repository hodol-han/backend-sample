plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.5'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'com.diffplug.spotless' version '7.0.3'
  id("org.springdoc.openapi-gradle-plugin") version "1.9.0"
}

ext {
  googleJavaFormatVersion = '1.27.0'
}

group = 'com.hodol.han.samples.backend'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'com.h2database:h2'
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  // Scoped for development only
  compileOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
  developmentOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
}

tasks.named('test') {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}

tasks.withType(JavaCompile) {
  // // Uncomment this if you plan explicit parameter names
  // // (i.e. @PathVariable("..."))
  // options.compilerArgs = options.compilerArgs.findAll { it != "-parameters" }
}

spotless {
  // Don't run Spotless on every build; instead, enforce it on commit using a pre-commit hook.
  enforceCheck = false

  groovyGradle {
    target '*.gradle'
    greclipse().configFile('spotless-groovy.properties')
  }

  java {
    importOrder('java', 'javax', 'org', 'com')
    removeUnusedImports()
    googleJavaFormat(googleJavaFormatVersion)
  }
}
