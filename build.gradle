plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hodol.han.samples.backend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		// Align output directories with VS Code's default (bin/main) to ensure
		// consistency between Gradle builds and IDE operations.
		output.resourcesDir = file("bin/main")
		java.destinationDirectory = file("bin/main")
	}
	test {
		// Set test classes output to VS Code's default (bin/test) for seamless
		// integration with IDE testing tools.
		java.destinationDirectory = file("bin/test")
	}
}

tasks.withType(JavaCompile) {
	// // Uncomment this if you plan explicit parameter names
	// // (i.e. @PathVariable("..."))
	// options.compilerArgs = options.compilerArgs.findAll { it != "-parameters" }
}